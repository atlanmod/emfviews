/*
* generated by Xtext
*/
grammar InternalSqlview;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package emfviews.dsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package emfviews.dsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import emfviews.dsl.services.SqlviewGrammarAccess;

}

@parser::members {
 
 	private SqlviewGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SqlviewGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMetamodel
entryRuleMetamodel 
:
{ before(grammarAccess.getMetamodelRule()); }
	 ruleMetamodel
{ after(grammarAccess.getMetamodelRule()); } 
	 EOF 
;

// Rule Metamodel
ruleMetamodel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMetamodelAccess().getGroup()); }
(rule__Metamodel__Group__0)
{ after(grammarAccess.getMetamodelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getGroup()); }
(rule__Expression__Group__0)
{ after(grammarAccess.getExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelect
entryRuleSelect 
:
{ before(grammarAccess.getSelectRule()); }
	 ruleSelect
{ after(grammarAccess.getSelectRule()); } 
	 EOF 
;

// Rule Select
ruleSelect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectAccess().getAlternatives()); }
(rule__Select__Alternatives)
{ after(grammarAccess.getSelectAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFrom
entryRuleFrom 
:
{ before(grammarAccess.getFromRule()); }
	 ruleFrom
{ after(grammarAccess.getFromRule()); } 
	 EOF 
;

// Rule From
ruleFrom
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFromAccess().getGroup()); }
(rule__From__Group__0)
{ after(grammarAccess.getFromAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAccess().getNameAssignment()); }
(rule__Attribute__NameAssignment)
{ after(grammarAccess.getAttributeAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClass
entryRuleClass 
:
{ before(grammarAccess.getClassRule()); }
	 ruleClass
{ after(grammarAccess.getClassRule()); } 
	 EOF 
;

// Rule Class
ruleClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassAccess().getNameAssignment()); }
(rule__Class__NameAssignment)
{ after(grammarAccess.getClassAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMetamodelName
entryRuleMetamodelName 
:
{ before(grammarAccess.getMetamodelNameRule()); }
	 ruleMetamodelName
{ after(grammarAccess.getMetamodelNameRule()); } 
	 EOF 
;

// Rule MetamodelName
ruleMetamodelName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMetamodelNameAccess().getNameAssignment()); }
(rule__MetamodelName__NameAssignment)
{ after(grammarAccess.getMetamodelNameAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCondition
entryRuleCondition 
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionAccess().getGroup()); }
(rule__Condition__Group__0)
{ after(grammarAccess.getConditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComparison
entryRuleComparison 
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComparisonAccess().getGroup()); }
(rule__Comparison__Group__0)
{ after(grammarAccess.getComparisonAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLeft
entryRuleLeft 
:
{ before(grammarAccess.getLeftRule()); }
	 ruleLeft
{ after(grammarAccess.getLeftRule()); } 
	 EOF 
;

// Rule Left
ruleLeft
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLeftAccess().getGroup()); }
(rule__Left__Group__0)
{ after(grammarAccess.getLeftAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRight
entryRuleRight 
:
{ before(grammarAccess.getRightRule()); }
	 ruleRight
{ after(grammarAccess.getRightRule()); } 
	 EOF 
;

// Rule Right
ruleRight
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRightAccess().getAlternatives()); }
(rule__Right__Alternatives)
{ after(grammarAccess.getRightAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Select__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getSelectAssignment_0()); }
(rule__Select__SelectAssignment_0)
{ after(grammarAccess.getSelectAccess().getSelectAssignment_0()); }
)

    |(
{ before(grammarAccess.getSelectAccess().getGroup_1()); }
(rule__Select__Group_1__0)
{ after(grammarAccess.getSelectAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getANDKeyword_1_0_0()); }

	'AND' 

{ after(grammarAccess.getConditionAccess().getANDKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getConditionAccess().getORKeyword_1_0_1()); }

	'OR' 

{ after(grammarAccess.getConditionAccess().getORKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getEqualsSignKeyword_1_0()); }

	'=' 

{ after(grammarAccess.getComparisonAccess().getEqualsSignKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getLessThanSignEqualsSignKeyword_1_1()); }

	'<=' 

{ after(grammarAccess.getComparisonAccess().getLessThanSignEqualsSignKeyword_1_1()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getGreaterThanSignEqualsSignKeyword_1_2()); }

	'>=' 

{ after(grammarAccess.getComparisonAccess().getGreaterThanSignEqualsSignKeyword_1_2()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getLessThanSignKeyword_1_3()); }

	'<' 

{ after(grammarAccess.getComparisonAccess().getLessThanSignKeyword_1_3()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getGreaterThanSignKeyword_1_4()); }

	'>' 

{ after(grammarAccess.getComparisonAccess().getGreaterThanSignKeyword_1_4()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getLessThanSignGreaterThanSignKeyword_1_5()); }

	'<>' 

{ after(grammarAccess.getComparisonAccess().getLessThanSignGreaterThanSignKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Right__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRightAccess().getGroup_0()); }
(rule__Right__Group_0__0)
{ after(grammarAccess.getRightAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getRightAccess().getValueAssignment_1()); }
(rule__Right__ValueAssignment_1)
{ after(grammarAccess.getRightAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getCreateViewKeyword_0()); }

	'create view' 

{ after(grammarAccess.getModelAccess().getCreateViewKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getViewNameAssignment_1()); }
(rule__Model__ViewNameAssignment_1)
{ after(grammarAccess.getModelAccess().getViewNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getFromKeyword_2()); }

	'from' 

{ after(grammarAccess.getModelAccess().getFromKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getMetamodelAssignment_3()); }
(rule__Model__MetamodelAssignment_3)
{ after(grammarAccess.getModelAccess().getMetamodelAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__4__Impl
	rule__Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGroup_4()); }
(rule__Model__Group_4__0)*
{ after(grammarAccess.getModelAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getExpressionAssignment_5()); }
(rule__Model__ExpressionAssignment_5)
{ after(grammarAccess.getModelAccess().getExpressionAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Model__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_4__0__Impl
	rule__Model__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getModelAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getMetamodelAssignment_4_1()); }
(rule__Model__MetamodelAssignment_4_1)
{ after(grammarAccess.getModelAccess().getMetamodelAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Metamodel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Metamodel__Group__0__Impl
	rule__Metamodel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Metamodel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelAccess().getMetamodelURLAssignment_0()); }
(rule__Metamodel__MetamodelURLAssignment_0)
{ after(grammarAccess.getMetamodelAccess().getMetamodelURLAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Metamodel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Metamodel__Group__1__Impl
	rule__Metamodel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Metamodel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelAccess().getAsKeyword_1()); }

	'as' 

{ after(grammarAccess.getMetamodelAccess().getAsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Metamodel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Metamodel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Metamodel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelAccess().getMetamodelNameAssignment_2()); }
(rule__Metamodel__MetamodelNameAssignment_2)
{ after(grammarAccess.getMetamodelAccess().getMetamodelNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getSelectKeyword_0()); }

	'select' 

{ after(grammarAccess.getExpressionAccess().getSelectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__1__Impl
	rule__Expression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getSelectAssignment_1()); }
(rule__Expression__SelectAssignment_1)
{ after(grammarAccess.getExpressionAccess().getSelectAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__2__Impl
	rule__Expression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getFromKeyword_2()); }

	'from' 

{ after(grammarAccess.getExpressionAccess().getFromKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__3__Impl
	rule__Expression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getFromAssignment_3()); }
(rule__Expression__FromAssignment_3)
{ after(grammarAccess.getExpressionAccess().getFromAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__4__Impl
	rule__Expression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getWhereKeyword_4()); }

	'where' 

{ after(grammarAccess.getExpressionAccess().getWhereKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getExpressionAccess().getConditionAssignment_5()); }
(rule__Expression__ConditionAssignment_5)
{ after(grammarAccess.getExpressionAccess().getConditionAssignment_5()); }
)
(
{ before(grammarAccess.getExpressionAccess().getConditionAssignment_5()); }
(rule__Expression__ConditionAssignment_5)*
{ after(grammarAccess.getExpressionAccess().getConditionAssignment_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Select__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group_1__0__Impl
	rule__Select__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getMetamodelAssignment_1_0()); }
(rule__Select__MetamodelAssignment_1_0)
{ after(grammarAccess.getSelectAccess().getMetamodelAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group_1__1__Impl
	rule__Select__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getFullStopKeyword_1_1()); }

	'.' 

{ after(grammarAccess.getSelectAccess().getFullStopKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group_1__2__Impl
	rule__Select__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getClassAssignment_1_2()); }
(rule__Select__ClassAssignment_1_2)
{ after(grammarAccess.getSelectAccess().getClassAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group_1__3__Impl
	rule__Select__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getFullStopKeyword_1_3()); }

	'.' 

{ after(grammarAccess.getSelectAccess().getFullStopKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group_1__4__Impl
	rule__Select__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getAttributeAssignment_1_4()); }
(rule__Select__AttributeAssignment_1_4)
{ after(grammarAccess.getSelectAccess().getAttributeAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getGroup_1_5()); }
(rule__Select__Group_1_5__0)*
{ after(grammarAccess.getSelectAccess().getGroup_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Select__Group_1_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group_1_5__0__Impl
	rule__Select__Group_1_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_1_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getCommaKeyword_1_5_0()); }

	',' 

{ after(grammarAccess.getSelectAccess().getCommaKeyword_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_1_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group_1_5__1__Impl
	rule__Select__Group_1_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_1_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getMetamodelAssignment_1_5_1()); }
(rule__Select__MetamodelAssignment_1_5_1)
{ after(grammarAccess.getSelectAccess().getMetamodelAssignment_1_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_1_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group_1_5__2__Impl
	rule__Select__Group_1_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_1_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getFullStopKeyword_1_5_2()); }

	'.' 

{ after(grammarAccess.getSelectAccess().getFullStopKeyword_1_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_1_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group_1_5__3__Impl
	rule__Select__Group_1_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_1_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getClassAssignment_1_5_3()); }
(rule__Select__ClassAssignment_1_5_3)
{ after(grammarAccess.getSelectAccess().getClassAssignment_1_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_1_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group_1_5__4__Impl
	rule__Select__Group_1_5__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_1_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getFullStopKeyword_1_5_4()); }

	'.' 

{ after(grammarAccess.getSelectAccess().getFullStopKeyword_1_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_1_5__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group_1_5__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_1_5__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getAttributeAssignment_1_5_5()); }
(rule__Select__AttributeAssignment_1_5_5)
{ after(grammarAccess.getSelectAccess().getAttributeAssignment_1_5_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__From__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__From__Group__0__Impl
	rule__From__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromAccess().getMetamodelAssignment_0()); }
(rule__From__MetamodelAssignment_0)
{ after(grammarAccess.getFromAccess().getMetamodelAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__From__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__From__Group__1__Impl
	rule__From__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getFromAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__From__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__From__Group__2__Impl
	rule__From__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromAccess().getClassAssignment_2()); }
(rule__From__ClassAssignment_2)
{ after(grammarAccess.getFromAccess().getClassAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__From__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__From__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromAccess().getGroup_3()); }
(rule__From__Group_3__0)*
{ after(grammarAccess.getFromAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__From__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__From__Group_3__0__Impl
	rule__From__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getFromAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__From__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__From__Group_3__1__Impl
	rule__From__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromAccess().getMetamodelAssignment_3_1()); }
(rule__From__MetamodelAssignment_3_1)
{ after(grammarAccess.getFromAccess().getMetamodelAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__From__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__From__Group_3__2__Impl
	rule__From__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromAccess().getFullStopKeyword_3_2()); }

	'.' 

{ after(grammarAccess.getFromAccess().getFullStopKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__From__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__From__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromAccess().getClassAssignment_3_3()); }
(rule__From__ClassAssignment_3_3)
{ after(grammarAccess.getFromAccess().getClassAssignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Condition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getValueAssignment_0()); }
(rule__Condition__ValueAssignment_0)
{ after(grammarAccess.getConditionAccess().getValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getGroup_1()); }
(rule__Condition__Group_1__0)*
{ after(grammarAccess.getConditionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Condition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group_1__0__Impl
	rule__Condition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getAlternatives_1_0()); }
(rule__Condition__Alternatives_1_0)
{ after(grammarAccess.getConditionAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getValueAssignment_1_1()); }
(rule__Condition__ValueAssignment_1_1)
{ after(grammarAccess.getConditionAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Comparison__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getLeftAssignment_0()); }
(rule__Comparison__LeftAssignment_0)
{ after(grammarAccess.getComparisonAccess().getLeftAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group__1__Impl
	rule__Comparison__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getAlternatives_1()); }
(rule__Comparison__Alternatives_1)
{ after(grammarAccess.getComparisonAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getRightAssignment_2()); }
(rule__Comparison__RightAssignment_2)
{ after(grammarAccess.getComparisonAccess().getRightAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Left__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Left__Group__0__Impl
	rule__Left__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeftAccess().getMetamodelAssignment_0()); }
(rule__Left__MetamodelAssignment_0)
{ after(grammarAccess.getLeftAccess().getMetamodelAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Left__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Left__Group__1__Impl
	rule__Left__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeftAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getLeftAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Left__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Left__Group__2__Impl
	rule__Left__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeftAccess().getClassAssignment_2()); }
(rule__Left__ClassAssignment_2)
{ after(grammarAccess.getLeftAccess().getClassAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Left__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Left__Group__3__Impl
	rule__Left__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeftAccess().getFullStopKeyword_3()); }

	'.' 

{ after(grammarAccess.getLeftAccess().getFullStopKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Left__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Left__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeftAccess().getAttributeWhereLeftAssignment_4()); }
(rule__Left__AttributeWhereLeftAssignment_4)
{ after(grammarAccess.getLeftAccess().getAttributeWhereLeftAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Right__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Right__Group_0__0__Impl
	rule__Right__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRightAccess().getMetamodelAssignment_0_0()); }
(rule__Right__MetamodelAssignment_0_0)
{ after(grammarAccess.getRightAccess().getMetamodelAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Right__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Right__Group_0__1__Impl
	rule__Right__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRightAccess().getFullStopKeyword_0_1()); }

	'.' 

{ after(grammarAccess.getRightAccess().getFullStopKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Right__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Right__Group_0__2__Impl
	rule__Right__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRightAccess().getClassAssignment_0_2()); }
(rule__Right__ClassAssignment_0_2)
{ after(grammarAccess.getRightAccess().getClassAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Right__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Right__Group_0__3__Impl
	rule__Right__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRightAccess().getFullStopKeyword_0_3()); }

	'.' 

{ after(grammarAccess.getRightAccess().getFullStopKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Right__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Right__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRightAccess().getAttributeWhereRightAssignment_0_4()); }
(rule__Right__AttributeWhereRightAssignment_0_4)
{ after(grammarAccess.getRightAccess().getAttributeWhereRightAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}













rule__Model__ViewNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getViewNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getModelAccess().getViewNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__MetamodelAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getMetamodelMetamodelParserRuleCall_3_0()); }
	ruleMetamodel{ after(grammarAccess.getModelAccess().getMetamodelMetamodelParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__MetamodelAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getMetamodelMetamodelParserRuleCall_4_1_0()); }
	ruleMetamodel{ after(grammarAccess.getModelAccess().getMetamodelMetamodelParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ExpressionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getExpressionExpressionParserRuleCall_5_0()); }
	ruleExpression{ after(grammarAccess.getModelAccess().getExpressionExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Metamodel__MetamodelURLAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelAccess().getMetamodelURLEStringParserRuleCall_0_0()); }
	ruleEString{ after(grammarAccess.getMetamodelAccess().getMetamodelURLEStringParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Metamodel__MetamodelNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelAccess().getMetamodelNameMetamodelNameParserRuleCall_2_0()); }
	ruleMetamodelName{ after(grammarAccess.getMetamodelAccess().getMetamodelNameMetamodelNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__SelectAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getSelectSelectParserRuleCall_1_0()); }
	ruleSelect{ after(grammarAccess.getExpressionAccess().getSelectSelectParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__FromAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getFromFromParserRuleCall_3_0()); }
	ruleFrom{ after(grammarAccess.getExpressionAccess().getFromFromParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ConditionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getConditionConditionParserRuleCall_5_0()); }
	ruleCondition{ after(grammarAccess.getExpressionAccess().getConditionConditionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Select__SelectAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getSelectAsteriskKeyword_0_0()); }
(
{ before(grammarAccess.getSelectAccess().getSelectAsteriskKeyword_0_0()); }

	'*' 

{ after(grammarAccess.getSelectAccess().getSelectAsteriskKeyword_0_0()); }
)

{ after(grammarAccess.getSelectAccess().getSelectAsteriskKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Select__MetamodelAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getMetamodelMetamodelNameCrossReference_1_0_0()); }
(
{ before(grammarAccess.getSelectAccess().getMetamodelMetamodelNameIDTerminalRuleCall_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getSelectAccess().getMetamodelMetamodelNameIDTerminalRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getSelectAccess().getMetamodelMetamodelNameCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Select__ClassAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getClassClassParserRuleCall_1_2_0()); }
	ruleClass{ after(grammarAccess.getSelectAccess().getClassClassParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Select__AttributeAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getAttributeAttributeParserRuleCall_1_4_0()); }
	ruleAttribute{ after(grammarAccess.getSelectAccess().getAttributeAttributeParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Select__MetamodelAssignment_1_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getMetamodelMetamodelNameCrossReference_1_5_1_0()); }
(
{ before(grammarAccess.getSelectAccess().getMetamodelMetamodelNameIDTerminalRuleCall_1_5_1_0_1()); }
	RULE_ID{ after(grammarAccess.getSelectAccess().getMetamodelMetamodelNameIDTerminalRuleCall_1_5_1_0_1()); }
)
{ after(grammarAccess.getSelectAccess().getMetamodelMetamodelNameCrossReference_1_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Select__ClassAssignment_1_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getClassClassParserRuleCall_1_5_3_0()); }
	ruleClass{ after(grammarAccess.getSelectAccess().getClassClassParserRuleCall_1_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Select__AttributeAssignment_1_5_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getAttributeAttributeParserRuleCall_1_5_5_0()); }
	ruleAttribute{ after(grammarAccess.getSelectAccess().getAttributeAttributeParserRuleCall_1_5_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__From__MetamodelAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromAccess().getMetamodelMetamodelNameCrossReference_0_0()); }
(
{ before(grammarAccess.getFromAccess().getMetamodelMetamodelNameIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getFromAccess().getMetamodelMetamodelNameIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getFromAccess().getMetamodelMetamodelNameCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__From__ClassAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromAccess().getClassClassParserRuleCall_2_0()); }
	ruleClass{ after(grammarAccess.getFromAccess().getClassClassParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__From__MetamodelAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromAccess().getMetamodelMetamodelNameCrossReference_3_1_0()); }
(
{ before(grammarAccess.getFromAccess().getMetamodelMetamodelNameIDTerminalRuleCall_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getFromAccess().getMetamodelMetamodelNameIDTerminalRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getFromAccess().getMetamodelMetamodelNameCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__From__ClassAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromAccess().getClassClassParserRuleCall_3_3_0()); }
	ruleClass{ after(grammarAccess.getFromAccess().getClassClassParserRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getClassAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelName__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelNameAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getMetamodelNameAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getValueComparisonParserRuleCall_0_0()); }
	ruleComparison{ after(grammarAccess.getConditionAccess().getValueComparisonParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getValueComparisonParserRuleCall_1_1_0()); }
	ruleComparison{ after(grammarAccess.getConditionAccess().getValueComparisonParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__LeftAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getLeftLeftParserRuleCall_0_0()); }
	ruleLeft{ after(grammarAccess.getComparisonAccess().getLeftLeftParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__RightAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getRightRightParserRuleCall_2_0()); }
	ruleRight{ after(grammarAccess.getComparisonAccess().getRightRightParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Left__MetamodelAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeftAccess().getMetamodelMetamodelNameCrossReference_0_0()); }
(
{ before(grammarAccess.getLeftAccess().getMetamodelMetamodelNameIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getLeftAccess().getMetamodelMetamodelNameIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getLeftAccess().getMetamodelMetamodelNameCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Left__ClassAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeftAccess().getClassClassCrossReference_2_0()); }
(
{ before(grammarAccess.getLeftAccess().getClassClassIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getLeftAccess().getClassClassIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getLeftAccess().getClassClassCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Left__AttributeWhereLeftAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeftAccess().getAttributeWhereLeftAttributeParserRuleCall_4_0()); }
	ruleAttribute{ after(grammarAccess.getLeftAccess().getAttributeWhereLeftAttributeParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Right__MetamodelAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRightAccess().getMetamodelMetamodelNameCrossReference_0_0_0()); }
(
{ before(grammarAccess.getRightAccess().getMetamodelMetamodelNameIDTerminalRuleCall_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getRightAccess().getMetamodelMetamodelNameIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getRightAccess().getMetamodelMetamodelNameCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Right__ClassAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRightAccess().getClassClassCrossReference_0_2_0()); }
(
{ before(grammarAccess.getRightAccess().getClassClassIDTerminalRuleCall_0_2_0_1()); }
	RULE_ID{ after(grammarAccess.getRightAccess().getClassClassIDTerminalRuleCall_0_2_0_1()); }
)
{ after(grammarAccess.getRightAccess().getClassClassCrossReference_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Right__AttributeWhereRightAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRightAccess().getAttributeWhereRightAttributeParserRuleCall_0_4_0()); }
	ruleAttribute{ after(grammarAccess.getRightAccess().getAttributeWhereRightAttributeParserRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Right__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRightAccess().getValueEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getRightAccess().getValueEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


