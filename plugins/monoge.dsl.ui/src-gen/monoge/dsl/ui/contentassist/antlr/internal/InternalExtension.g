/*
* generated by Xtext
*/
grammar InternalExtension;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package monoge.dsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package monoge.dsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import monoge.dsl.services.ExtensionGrammarAccess;

}

@parser::members {
 
 	private ExtensionGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ExtensionGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExtension
entryRuleExtension 
:
{ before(grammarAccess.getExtensionRule()); }
	 ruleExtension
{ after(grammarAccess.getExtensionRule()); } 
	 EOF 
;

// Rule Extension
ruleExtension
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExtensionAccess().getAlternatives()); }
(rule__Extension__Alternatives)
{ after(grammarAccess.getExtensionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMetamodel
entryRuleMetamodel 
:
{ before(grammarAccess.getMetamodelRule()); }
	 ruleMetamodel
{ after(grammarAccess.getMetamodelRule()); } 
	 EOF 
;

// Rule Metamodel
ruleMetamodel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMetamodelAccess().getNameAssignment()); }
(rule__Metamodel__NameAssignment)
{ after(grammarAccess.getMetamodelAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrefix
entryRulePrefix 
:
{ before(grammarAccess.getPrefixRule()); }
	 rulePrefix
{ after(grammarAccess.getPrefixRule()); } 
	 EOF 
;

// Rule Prefix
rulePrefix
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrefixAccess().getNameAssignment()); }
(rule__Prefix__NameAssignment)
{ after(grammarAccess.getPrefixAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCreate
entryRuleCreate 
:
{ before(grammarAccess.getCreateRule()); }
	 ruleCreate
{ after(grammarAccess.getCreateRule()); } 
	 EOF 
;

// Rule Create
ruleCreate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCreateAccess().getGroup()); }
(rule__Create__Group__0)
{ after(grammarAccess.getCreateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRefine
entryRuleRefine 
:
{ before(grammarAccess.getRefineRule()); }
	 ruleRefine
{ after(grammarAccess.getRefineRule()); } 
	 EOF 
;

// Rule Refine
ruleRefine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRefineAccess().getGroup()); }
(rule__Refine__Group__0)
{ after(grammarAccess.getRefineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGeneralize
entryRuleGeneralize 
:
{ before(grammarAccess.getGeneralizeRule()); }
	 ruleGeneralize
{ after(grammarAccess.getGeneralizeRule()); } 
	 EOF 
;

// Rule Generalize
ruleGeneralize
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGeneralizeAccess().getGroup()); }
(rule__Generalize__Group__0)
{ after(grammarAccess.getGeneralizeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModifyClass
entryRuleModifyClass 
:
{ before(grammarAccess.getModifyClassRule()); }
	 ruleModifyClass
{ after(grammarAccess.getModifyClassRule()); } 
	 EOF 
;

// Rule ModifyClass
ruleModifyClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModifyClassAccess().getGroup()); }
(rule__ModifyClass__Group__0)
{ after(grammarAccess.getModifyClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModifyOperator
entryRuleModifyOperator 
:
{ before(grammarAccess.getModifyOperatorRule()); }
	 ruleModifyOperator
{ after(grammarAccess.getModifyOperatorRule()); } 
	 EOF 
;

// Rule ModifyOperator
ruleModifyOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModifyOperatorAccess().getAlternatives()); }
(rule__ModifyOperator__Alternatives)
{ after(grammarAccess.getModifyOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddProperty
entryRuleAddProperty 
:
{ before(grammarAccess.getAddPropertyRule()); }
	 ruleAddProperty
{ after(grammarAccess.getAddPropertyRule()); } 
	 EOF 
;

// Rule AddProperty
ruleAddProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAddPropertyAccess().getGroup()); }
(rule__AddProperty__Group__0)
{ after(grammarAccess.getAddPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModifyProperty
entryRuleModifyProperty 
:
{ before(grammarAccess.getModifyPropertyRule()); }
	 ruleModifyProperty
{ after(grammarAccess.getModifyPropertyRule()); } 
	 EOF 
;

// Rule ModifyProperty
ruleModifyProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModifyPropertyAccess().getGroup()); }
(rule__ModifyProperty__Group__0)
{ after(grammarAccess.getModifyPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueAssignment
entryRuleValueAssignment 
:
{ before(grammarAccess.getValueAssignmentRule()); }
	 ruleValueAssignment
{ after(grammarAccess.getValueAssignmentRule()); } 
	 EOF 
;

// Rule ValueAssignment
ruleValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAssignmentAccess().getGroup()); }
(rule__ValueAssignment__Group__0)
{ after(grammarAccess.getValueAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFilterProperty
entryRuleFilterProperty 
:
{ before(grammarAccess.getFilterPropertyRule()); }
	 ruleFilterProperty
{ after(grammarAccess.getFilterPropertyRule()); } 
	 EOF 
;

// Rule FilterProperty
ruleFilterProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFilterPropertyAccess().getGroup()); }
(rule__FilterProperty__Group__0)
{ after(grammarAccess.getFilterPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFilterClass
entryRuleFilterClass 
:
{ before(grammarAccess.getFilterClassRule()); }
	 ruleFilterClass
{ after(grammarAccess.getFilterClassRule()); } 
	 EOF 
;

// Rule FilterClass
ruleFilterClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFilterClassAccess().getGroup()); }
(rule__FilterClass__Group__0)
{ after(grammarAccess.getFilterClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddConstraint
entryRuleAddConstraint 
:
{ before(grammarAccess.getAddConstraintRule()); }
	 ruleAddConstraint
{ after(grammarAccess.getAddConstraintRule()); } 
	 EOF 
;

// Rule AddConstraint
ruleAddConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAddConstraintAccess().getGroup()); }
(rule__AddConstraint__Group__0)
{ after(grammarAccess.getAddConstraintAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFilterConstraint
entryRuleFilterConstraint 
:
{ before(grammarAccess.getFilterConstraintRule()); }
	 ruleFilterConstraint
{ after(grammarAccess.getFilterConstraintRule()); } 
	 EOF 
;

// Rule FilterConstraint
ruleFilterConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFilterConstraintAccess().getGroup()); }
(rule__FilterConstraint__Group__0)
{ after(grammarAccess.getFilterConstraintAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCardinality
entryRuleCardinality 
:
{ before(grammarAccess.getCardinalityRule()); }
	 ruleCardinality
{ after(grammarAccess.getCardinalityRule()); } 
	 EOF 
;

// Rule Cardinality
ruleCardinality
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCardinalityAccess().getAlternatives()); }
(rule__Cardinality__Alternatives)
{ after(grammarAccess.getCardinalityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationType
entryRuleRelationType 
:
{ before(grammarAccess.getRelationTypeRule()); }
	 ruleRelationType
{ after(grammarAccess.getRelationTypeRule()); } 
	 EOF 
;

// Rule RelationType
ruleRelationType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationTypeAccess().getAlternatives()); }
(rule__RelationType__Alternatives)
{ after(grammarAccess.getRelationTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Extension__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtensionAccess().getCreateParserRuleCall_0()); }
	ruleCreate
{ after(grammarAccess.getExtensionAccess().getCreateParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExtensionAccess().getRefineParserRuleCall_1()); }
	ruleRefine
{ after(grammarAccess.getExtensionAccess().getRefineParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getExtensionAccess().getGeneralizeParserRuleCall_2()); }
	ruleGeneralize
{ after(grammarAccess.getExtensionAccess().getGeneralizeParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getExtensionAccess().getModifyClassParserRuleCall_3()); }
	ruleModifyClass
{ after(grammarAccess.getExtensionAccess().getModifyClassParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getExtensionAccess().getFilterClassParserRuleCall_4()); }
	ruleFilterClass
{ after(grammarAccess.getExtensionAccess().getFilterClassParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModifyOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifyOperatorAccess().getAddPropertyParserRuleCall_0()); }
	ruleAddProperty
{ after(grammarAccess.getModifyOperatorAccess().getAddPropertyParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getModifyOperatorAccess().getModifyPropertyParserRuleCall_1()); }
	ruleModifyProperty
{ after(grammarAccess.getModifyOperatorAccess().getModifyPropertyParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getModifyOperatorAccess().getFilterPropertyParserRuleCall_2()); }
	ruleFilterProperty
{ after(grammarAccess.getModifyOperatorAccess().getFilterPropertyParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getModifyOperatorAccess().getAddConstraintParserRuleCall_3()); }
	ruleAddConstraint
{ after(grammarAccess.getModifyOperatorAccess().getAddConstraintParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getModifyOperatorAccess().getFilterConstraintParserRuleCall_4()); }
	ruleFilterConstraint
{ after(grammarAccess.getModifyOperatorAccess().getFilterConstraintParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypeAssignment_0()); }
(rule__Type__TypeAssignment_0)
{ after(grammarAccess.getTypeAccess().getTypeAssignment_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_1()); }
(rule__Type__Group_1__0)
{ after(grammarAccess.getTypeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getAsteriskFullStopFullStopDigitOneKeyword_0()); }

	'*..1' 

{ after(grammarAccess.getCardinalityAccess().getAsteriskFullStopFullStopDigitOneKeyword_0()); }
)

    |(
{ before(grammarAccess.getCardinalityAccess().getDigitZeroFullStopFullStopDigitOneKeyword_1()); }

	'0..1' 

{ after(grammarAccess.getCardinalityAccess().getDigitZeroFullStopFullStopDigitOneKeyword_1()); }
)

    |(
{ before(grammarAccess.getCardinalityAccess().getDigitOneFullStopFullStopDigitOneKeyword_2()); }

	'1..1' 

{ after(grammarAccess.getCardinalityAccess().getDigitOneFullStopFullStopDigitOneKeyword_2()); }
)

    |(
{ before(grammarAccess.getCardinalityAccess().getDigitOneFullStopFullStopAsteriskKeyword_3()); }

	'1..*' 

{ after(grammarAccess.getCardinalityAccess().getDigitOneFullStopFullStopAsteriskKeyword_3()); }
)

    |(
{ before(grammarAccess.getCardinalityAccess().getAsteriskFullStopFullStopAsteriskKeyword_4()); }

	'*..*' 

{ after(grammarAccess.getCardinalityAccess().getAsteriskFullStopFullStopAsteriskKeyword_4()); }
)

    |(
{ before(grammarAccess.getCardinalityAccess().getAsteriskKeyword_5()); }

	'*' 

{ after(grammarAccess.getCardinalityAccess().getAsteriskKeyword_5()); }
)

    |(
{ before(grammarAccess.getCardinalityAccess().getDigitZeroFullStopFullStopAsteriskKeyword_6()); }

	'0..*' 

{ after(grammarAccess.getCardinalityAccess().getDigitZeroFullStopFullStopAsteriskKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getCompositionKeyword_0()); }

	'composition' 

{ after(grammarAccess.getRelationTypeAccess().getCompositionKeyword_0()); }
)

    |(
{ before(grammarAccess.getRelationTypeAccess().getAssociationKeyword_1()); }

	'association' 

{ after(grammarAccess.getRelationTypeAccess().getAssociationKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDefineKeyword_0()); }

	'define' 

{ after(grammarAccess.getModelAccess().getDefineKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getExtensionNameAssignment_1()); }
(rule__Model__ExtensionNameAssignment_1)
{ after(grammarAccess.getModelAccess().getExtensionNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getExtendingKeyword_2()); }

	'extending' 

{ after(grammarAccess.getModelAccess().getExtendingKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getMetamodelAssignment_3()); }
(rule__Model__MetamodelAssignment_3)
{ after(grammarAccess.getModelAccess().getMetamodelAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__4__Impl
	rule__Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getModelAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__5__Impl
	rule__Model__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPrefixAssignment_5()); }
(rule__Model__PrefixAssignment_5)
{ after(grammarAccess.getModelAccess().getPrefixAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__6__Impl
	rule__Model__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGroup_6()); }
(rule__Model__Group_6__0)*
{ after(grammarAccess.getModelAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__7__Impl
	rule__Model__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_7()); }

	'{' 

{ after(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__8__Impl
	rule__Model__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getExtensionsAssignment_8()); }
(rule__Model__ExtensionsAssignment_8)*
{ after(grammarAccess.getModelAccess().getExtensionsAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Model__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_6__0__Impl
	rule__Model__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getModelAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_6__1__Impl
	rule__Model__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getMetamodelAssignment_6_1()); }
(rule__Model__MetamodelAssignment_6_1)
{ after(grammarAccess.getModelAccess().getMetamodelAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_6__2__Impl
	rule__Model__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getColonKeyword_6_2()); }

	':' 

{ after(grammarAccess.getModelAccess().getColonKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPrefixAssignment_6_3()); }
(rule__Model__PrefixAssignment_6_3)
{ after(grammarAccess.getModelAccess().getPrefixAssignment_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Create__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Create__Group__0__Impl
	rule__Create__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateAccess().getAddClassKeyword_0()); }

	'add class' 

{ after(grammarAccess.getCreateAccess().getAddClassKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Create__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Create__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateAccess().getClassAssignment_1()); }
(rule__Create__ClassAssignment_1)
{ after(grammarAccess.getCreateAccess().getClassAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Refine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Refine__Group__0__Impl
	rule__Refine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Refine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefineAccess().getAddClassKeyword_0()); }

	'add class' 

{ after(grammarAccess.getRefineAccess().getAddClassKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Refine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Refine__Group__1__Impl
	rule__Refine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Refine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefineAccess().getClassNewAssignment_1()); }
(rule__Refine__ClassNewAssignment_1)
{ after(grammarAccess.getRefineAccess().getClassNewAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Refine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Refine__Group__2__Impl
	rule__Refine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Refine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefineAccess().getSpecializingKeyword_2()); }

	'specializing' 

{ after(grammarAccess.getRefineAccess().getSpecializingKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Refine__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Refine__Group__3__Impl
	rule__Refine__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Refine__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefineAccess().getPrefixAssignment_3()); }
(rule__Refine__PrefixAssignment_3)
{ after(grammarAccess.getRefineAccess().getPrefixAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Refine__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Refine__Group__4__Impl
	rule__Refine__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Refine__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefineAccess().getFullStopKeyword_4()); }

	'.' 

{ after(grammarAccess.getRefineAccess().getFullStopKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Refine__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Refine__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Refine__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefineAccess().getClassOriginalAssignment_5()); }
(rule__Refine__ClassOriginalAssignment_5)
{ after(grammarAccess.getRefineAccess().getClassOriginalAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Generalize__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generalize__Group__0__Impl
	rule__Generalize__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalize__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralizeAccess().getAddClassKeyword_0()); }

	'add class' 

{ after(grammarAccess.getGeneralizeAccess().getAddClassKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generalize__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generalize__Group__1__Impl
	rule__Generalize__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalize__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralizeAccess().getClassNewAssignment_1()); }
(rule__Generalize__ClassNewAssignment_1)
{ after(grammarAccess.getGeneralizeAccess().getClassNewAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generalize__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generalize__Group__2__Impl
	rule__Generalize__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalize__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralizeAccess().getSupertypingKeyword_2()); }

	'supertyping' 

{ after(grammarAccess.getGeneralizeAccess().getSupertypingKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generalize__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generalize__Group__3__Impl
	rule__Generalize__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalize__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralizeAccess().getPrefixAssignment_3()); }
(rule__Generalize__PrefixAssignment_3)
{ after(grammarAccess.getGeneralizeAccess().getPrefixAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generalize__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generalize__Group__4__Impl
	rule__Generalize__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalize__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralizeAccess().getFullStopKeyword_4()); }

	'.' 

{ after(grammarAccess.getGeneralizeAccess().getFullStopKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generalize__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generalize__Group__5__Impl
	rule__Generalize__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalize__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralizeAccess().getClassAssignment_5()); }
(rule__Generalize__ClassAssignment_5)
{ after(grammarAccess.getGeneralizeAccess().getClassAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generalize__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generalize__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalize__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralizeAccess().getGroup_6()); }
(rule__Generalize__Group_6__0)*
{ after(grammarAccess.getGeneralizeAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Generalize__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generalize__Group_6__0__Impl
	rule__Generalize__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalize__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralizeAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getGeneralizeAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generalize__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generalize__Group_6__1__Impl
	rule__Generalize__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalize__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralizeAccess().getPrefixAssignment_6_1()); }
(rule__Generalize__PrefixAssignment_6_1)
{ after(grammarAccess.getGeneralizeAccess().getPrefixAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generalize__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generalize__Group_6__2__Impl
	rule__Generalize__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalize__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralizeAccess().getFullStopKeyword_6_2()); }

	'.' 

{ after(grammarAccess.getGeneralizeAccess().getFullStopKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generalize__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generalize__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalize__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralizeAccess().getClassAssignment_6_3()); }
(rule__Generalize__ClassAssignment_6_3)
{ after(grammarAccess.getGeneralizeAccess().getClassAssignment_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ModifyClass__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModifyClass__Group__0__Impl
	rule__ModifyClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifyClass__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifyClassAccess().getModifyClassKeyword_0()); }

	'modify class' 

{ after(grammarAccess.getModifyClassAccess().getModifyClassKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModifyClass__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModifyClass__Group__1__Impl
	rule__ModifyClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifyClass__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifyClassAccess().getPrefixAssignment_1()); }
(rule__ModifyClass__PrefixAssignment_1)
{ after(grammarAccess.getModifyClassAccess().getPrefixAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModifyClass__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModifyClass__Group__2__Impl
	rule__ModifyClass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifyClass__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifyClassAccess().getFullStopKeyword_2()); }

	'.' 

{ after(grammarAccess.getModifyClassAccess().getFullStopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModifyClass__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModifyClass__Group__3__Impl
	rule__ModifyClass__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifyClass__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifyClassAccess().getClassAssignment_3()); }
(rule__ModifyClass__ClassAssignment_3)
{ after(grammarAccess.getModifyClassAccess().getClassAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModifyClass__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModifyClass__Group__4__Impl
	rule__ModifyClass__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifyClass__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifyClassAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getModifyClassAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModifyClass__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModifyClass__Group__5__Impl
	rule__ModifyClass__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifyClass__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifyClassAccess().getModifyOperatorsAssignment_5()); }
(rule__ModifyClass__ModifyOperatorsAssignment_5)*
{ after(grammarAccess.getModifyClassAccess().getModifyOperatorsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModifyClass__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModifyClass__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifyClass__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifyClassAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getModifyClassAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__AddProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddProperty__Group__0__Impl
	rule__AddProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddPropertyAccess().getAddPropertyKeyword_0()); }

	'add property' 

{ after(grammarAccess.getAddPropertyAccess().getAddPropertyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddProperty__Group__1__Impl
	rule__AddProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddPropertyAccess().getPropertyAssignment_1()); }
(rule__AddProperty__PropertyAssignment_1)
{ after(grammarAccess.getAddPropertyAccess().getPropertyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddProperty__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddProperty__Group__2__Impl
	rule__AddProperty__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AddProperty__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddPropertyAccess().getTypeKeyword_2()); }

	'type' 

{ after(grammarAccess.getAddPropertyAccess().getTypeKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddProperty__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddProperty__Group__3__Impl
	rule__AddProperty__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AddProperty__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddPropertyAccess().getTypeAssignment_3()); }
(rule__AddProperty__TypeAssignment_3)
{ after(grammarAccess.getAddPropertyAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddProperty__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddProperty__Group__4__Impl
	rule__AddProperty__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AddProperty__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddPropertyAccess().getCardinalityAssignment_4()); }
(rule__AddProperty__CardinalityAssignment_4)?
{ after(grammarAccess.getAddPropertyAccess().getCardinalityAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddProperty__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddProperty__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddProperty__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddPropertyAccess().getRelationTypeAssignment_5()); }
(rule__AddProperty__RelationTypeAssignment_5)?
{ after(grammarAccess.getAddPropertyAccess().getRelationTypeAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Type__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1__0__Impl
	rule__Type__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getPrefixAssignment_1_0()); }
(rule__Type__PrefixAssignment_1_0)
{ after(grammarAccess.getTypeAccess().getPrefixAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1__1__Impl
	rule__Type__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getFullStopKeyword_1_1()); }

	'.' 

{ after(grammarAccess.getTypeAccess().getFullStopKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getClassAssignment_1_2()); }
(rule__Type__ClassAssignment_1_2)
{ after(grammarAccess.getTypeAccess().getClassAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ModifyProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModifyProperty__Group__0__Impl
	rule__ModifyProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifyProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifyPropertyAccess().getModifyPropertyKeyword_0()); }

	'modify property' 

{ after(grammarAccess.getModifyPropertyAccess().getModifyPropertyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModifyProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModifyProperty__Group__1__Impl
	rule__ModifyProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifyProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifyPropertyAccess().getPropertyAssignment_1()); }
(rule__ModifyProperty__PropertyAssignment_1)
{ after(grammarAccess.getModifyPropertyAccess().getPropertyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModifyProperty__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModifyProperty__Group__2__Impl
	rule__ModifyProperty__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifyProperty__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifyPropertyAccess().getValueAssignment_2()); }
(rule__ModifyProperty__ValueAssignment_2)
{ after(grammarAccess.getModifyPropertyAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModifyProperty__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModifyProperty__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifyProperty__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifyPropertyAccess().getGroup_3()); }
(rule__ModifyProperty__Group_3__0)*
{ after(grammarAccess.getModifyPropertyAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ModifyProperty__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModifyProperty__Group_3__0__Impl
	rule__ModifyProperty__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifyProperty__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifyPropertyAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getModifyPropertyAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModifyProperty__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModifyProperty__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifyProperty__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifyPropertyAccess().getValueAssignment_3_1()); }
(rule__ModifyProperty__ValueAssignment_3_1)
{ after(grammarAccess.getModifyPropertyAccess().getValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ValueAssignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueAssignment__Group__0__Impl
	rule__ValueAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueAssignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAssignmentAccess().getAttributeAssignment_0()); }
(rule__ValueAssignment__AttributeAssignment_0)
{ after(grammarAccess.getValueAssignmentAccess().getAttributeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueAssignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueAssignment__Group__1__Impl
	rule__ValueAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueAssignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAssignmentAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getValueAssignmentAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueAssignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueAssignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueAssignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAssignmentAccess().getValueAssignment_2()); }
(rule__ValueAssignment__ValueAssignment_2)
{ after(grammarAccess.getValueAssignmentAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FilterProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterProperty__Group__0__Impl
	rule__FilterProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterPropertyAccess().getFilterPropertyKeyword_0()); }

	'filter property' 

{ after(grammarAccess.getFilterPropertyAccess().getFilterPropertyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FilterProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterProperty__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterPropertyAccess().getPropertyAssignment_1()); }
(rule__FilterProperty__PropertyAssignment_1)
{ after(grammarAccess.getFilterPropertyAccess().getPropertyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FilterClass__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterClass__Group__0__Impl
	rule__FilterClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterClass__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterClassAccess().getFilterClassKeyword_0()); }

	'filter class' 

{ after(grammarAccess.getFilterClassAccess().getFilterClassKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FilterClass__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterClass__Group__1__Impl
	rule__FilterClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterClass__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterClassAccess().getPrefixAssignment_1()); }
(rule__FilterClass__PrefixAssignment_1)
{ after(grammarAccess.getFilterClassAccess().getPrefixAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FilterClass__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterClass__Group__2__Impl
	rule__FilterClass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterClass__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterClassAccess().getFullStopKeyword_2()); }

	'.' 

{ after(grammarAccess.getFilterClassAccess().getFullStopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FilterClass__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterClass__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterClass__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterClassAccess().getClassAssignment_3()); }
(rule__FilterClass__ClassAssignment_3)
{ after(grammarAccess.getFilterClassAccess().getClassAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AddConstraint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddConstraint__Group__0__Impl
	rule__AddConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddConstraint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddConstraintAccess().getAddConstraintKeyword_0()); }

	'add constraint' 

{ after(grammarAccess.getAddConstraintAccess().getAddConstraintKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddConstraint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddConstraint__Group__1__Impl
	rule__AddConstraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddConstraint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddConstraintAccess().getConstraintAssignment_1()); }
(rule__AddConstraint__ConstraintAssignment_1)
{ after(grammarAccess.getAddConstraintAccess().getConstraintAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddConstraint__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddConstraint__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddConstraint__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddConstraintAccess().getValueAssignment_2()); }
(rule__AddConstraint__ValueAssignment_2)
{ after(grammarAccess.getAddConstraintAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FilterConstraint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterConstraint__Group__0__Impl
	rule__FilterConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterConstraint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterConstraintAccess().getFilterConstraintKeyword_0()); }

	'filter constraint' 

{ after(grammarAccess.getFilterConstraintAccess().getFilterConstraintKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FilterConstraint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterConstraint__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterConstraint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterConstraintAccess().getConstraintAssignment_1()); }
(rule__FilterConstraint__ConstraintAssignment_1)
{ after(grammarAccess.getFilterConstraintAccess().getConstraintAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__ExtensionNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getExtensionNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getModelAccess().getExtensionNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__MetamodelAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getMetamodelMetamodelParserRuleCall_3_0()); }
	ruleMetamodel{ after(grammarAccess.getModelAccess().getMetamodelMetamodelParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__PrefixAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPrefixPrefixParserRuleCall_5_0()); }
	rulePrefix{ after(grammarAccess.getModelAccess().getPrefixPrefixParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__MetamodelAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getMetamodelMetamodelParserRuleCall_6_1_0()); }
	ruleMetamodel{ after(grammarAccess.getModelAccess().getMetamodelMetamodelParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__PrefixAssignment_6_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPrefixPrefixParserRuleCall_6_3_0()); }
	rulePrefix{ after(grammarAccess.getModelAccess().getPrefixPrefixParserRuleCall_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ExtensionsAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getExtensionsExtensionParserRuleCall_8_0()); }
	ruleExtension{ after(grammarAccess.getModelAccess().getExtensionsExtensionParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Metamodel__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getMetamodelAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getPrefixAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Create__ClassAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateAccess().getClassIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getCreateAccess().getClassIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Refine__ClassNewAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefineAccess().getClassNewIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRefineAccess().getClassNewIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Refine__PrefixAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefineAccess().getPrefixPrefixCrossReference_3_0()); }
(
{ before(grammarAccess.getRefineAccess().getPrefixPrefixIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getRefineAccess().getPrefixPrefixIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getRefineAccess().getPrefixPrefixCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Refine__ClassOriginalAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefineAccess().getClassOriginalIDTerminalRuleCall_5_0()); }
	RULE_ID{ after(grammarAccess.getRefineAccess().getClassOriginalIDTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generalize__ClassNewAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralizeAccess().getClassNewIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getGeneralizeAccess().getClassNewIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generalize__PrefixAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralizeAccess().getPrefixPrefixCrossReference_3_0()); }
(
{ before(grammarAccess.getGeneralizeAccess().getPrefixPrefixIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getGeneralizeAccess().getPrefixPrefixIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getGeneralizeAccess().getPrefixPrefixCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generalize__ClassAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralizeAccess().getClassIDTerminalRuleCall_5_0()); }
	RULE_ID{ after(grammarAccess.getGeneralizeAccess().getClassIDTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generalize__PrefixAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralizeAccess().getPrefixPrefixCrossReference_6_1_0()); }
(
{ before(grammarAccess.getGeneralizeAccess().getPrefixPrefixIDTerminalRuleCall_6_1_0_1()); }
	RULE_ID{ after(grammarAccess.getGeneralizeAccess().getPrefixPrefixIDTerminalRuleCall_6_1_0_1()); }
)
{ after(grammarAccess.getGeneralizeAccess().getPrefixPrefixCrossReference_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generalize__ClassAssignment_6_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralizeAccess().getClassIDTerminalRuleCall_6_3_0()); }
	RULE_ID{ after(grammarAccess.getGeneralizeAccess().getClassIDTerminalRuleCall_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModifyClass__PrefixAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifyClassAccess().getPrefixPrefixCrossReference_1_0()); }
(
{ before(grammarAccess.getModifyClassAccess().getPrefixPrefixIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getModifyClassAccess().getPrefixPrefixIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getModifyClassAccess().getPrefixPrefixCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModifyClass__ClassAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifyClassAccess().getClassIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getModifyClassAccess().getClassIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModifyClass__ModifyOperatorsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifyClassAccess().getModifyOperatorsModifyOperatorParserRuleCall_5_0()); }
	ruleModifyOperator{ after(grammarAccess.getModifyClassAccess().getModifyOperatorsModifyOperatorParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddProperty__PropertyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddPropertyAccess().getPropertyIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAddPropertyAccess().getPropertyIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddProperty__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddPropertyAccess().getTypeTypeParserRuleCall_3_0()); }
	ruleType{ after(grammarAccess.getAddPropertyAccess().getTypeTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddProperty__CardinalityAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddPropertyAccess().getCardinalityCardinalityParserRuleCall_4_0()); }
	ruleCardinality{ after(grammarAccess.getAddPropertyAccess().getCardinalityCardinalityParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddProperty__RelationTypeAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddPropertyAccess().getRelationTypeRelationTypeParserRuleCall_5_0()); }
	ruleRelationType{ after(grammarAccess.getAddPropertyAccess().getRelationTypeRelationTypeParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypeIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getTypeAccess().getTypeIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__PrefixAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getPrefixPrefixCrossReference_1_0_0()); }
(
{ before(grammarAccess.getTypeAccess().getPrefixPrefixIDTerminalRuleCall_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getTypeAccess().getPrefixPrefixIDTerminalRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getTypeAccess().getPrefixPrefixCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__ClassAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getClassIDTerminalRuleCall_1_2_0()); }
	RULE_ID{ after(grammarAccess.getTypeAccess().getClassIDTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModifyProperty__PropertyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifyPropertyAccess().getPropertyIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getModifyPropertyAccess().getPropertyIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModifyProperty__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifyPropertyAccess().getValueValueAssignmentParserRuleCall_2_0()); }
	ruleValueAssignment{ after(grammarAccess.getModifyPropertyAccess().getValueValueAssignmentParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModifyProperty__ValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifyPropertyAccess().getValueValueAssignmentParserRuleCall_3_1_0()); }
	ruleValueAssignment{ after(grammarAccess.getModifyPropertyAccess().getValueValueAssignmentParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueAssignment__AttributeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAssignmentAccess().getAttributeIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getValueAssignmentAccess().getAttributeIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueAssignment__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAssignmentAccess().getValueEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getValueAssignmentAccess().getValueEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FilterProperty__PropertyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterPropertyAccess().getPropertyIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFilterPropertyAccess().getPropertyIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FilterClass__PrefixAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterClassAccess().getPrefixPrefixCrossReference_1_0()); }
(
{ before(grammarAccess.getFilterClassAccess().getPrefixPrefixIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getFilterClassAccess().getPrefixPrefixIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getFilterClassAccess().getPrefixPrefixCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FilterClass__ClassAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterClassAccess().getClassIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getFilterClassAccess().getClassIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddConstraint__ConstraintAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddConstraintAccess().getConstraintIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAddConstraintAccess().getConstraintIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddConstraint__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddConstraintAccess().getValueEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getAddConstraintAccess().getValueEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FilterConstraint__ConstraintAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterConstraintAccess().getConstraintEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getFilterConstraintAccess().getConstraintEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


