grammar fr.inria.atlanmod.emfviews.Mel with org.eclipse.xtext.common.Terminals
generate mel "http://www.inria.fr/atlanmod/emfviews/mel"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

//Specific grammar to define MM extensions

Model:
  ('import' imports+=Metamodel)*
  'define' extensionName=ID 'extending' metamodels+=[Metamodel] ("," metamodels+=[Metamodel])* 
  '{' extensions+=Extension* '}'
;

Metamodel:
  name=ID 'from' nsURI=STRING
;

Extension:
  AddClass | ModifyVirtualClass | ModifyClass | FilterClass
;

AddClass:
  'add' 'class' name=ID
  ('specializing' parents+=TargetClass ("," parents+=TargetClass)*)?
  ('supertyping' children+=TargetClass ("," children+=TargetClass)*)?
;

TargetClass:
  ConcreteClass | VirtualClass
;

ConcreteClass:
  metamodel=[Metamodel] '.' class=[ecore::EClass]
;

VirtualClass:
  class=[AddClass]
;

ModifyVirtualClass:
  'modify' 'class' class=VirtualClass '{'
    operators+=ModifyVirtualClassOperator*
  '}'
;

ModifyClass:
  'modify' 'class' class=ConcreteClass '{'
    operators+=ModifyConcreteClassOperator*
  '}'
;

ModifyVirtualClassOperator:
  AddAttribute | AddReference | AddConstraint
;

ModifyConcreteClassOperator:
  AddAttribute | AddReference | ModifyProperty | FilterProperty | AddConstraint | FilterConstraint
;

AddAttribute:
  'add' 'property' name=ID ':' type=Type (cardinality=Cardinality)?
;

AddReference:
  'add' relationType=RelationType name=ID ':' type=TargetClass (cardinality=Cardinality)?
;

Type:
  name=ID
;

ModifyProperty:
  'modify' 'property' property=[ecore::EStructuralFeature] '{'
    modifyPropertyOperators+=ModifyPropertyOperator*
  '}'
;
ModifyPropertyOperator:
  ChangeName | ChangeType | ChangeCardinality | ChangeRelationType
;

ChangeName:
  'name' newName=ID
;

ChangeType:
  'type' type=Type
;

ChangeCardinality:
  'cardinality' cardinality=Cardinality
;

ChangeRelationType:
  'relation' 'type' relationType=RelationType
;

FilterProperty:
  'filter' 'property' property=[ecore::EStructuralFeature]
;

FilterClass:
  'filter' 'class' class=ConcreteClass
;

AddConstraint:
  'add' 'constraint' constraint=ID value=EString
;

FilterConstraint:
  'filter' 'constraint' constraint=EString
;

// Disable spaces inside a cardinality
Cardinality hidden(ML_COMMENT):
  lowerBound=CardinalityBound '..' upperBound=CardinalityBound
;

enum CardinalityBound:
  ZERO = '0' | ONE = '1' | STAR = '*'
;

enum RelationType:
  COMPOSITION = 'composition' | ASSOCIATION = 'association'
;

EString returns ecore::EString:
  STRING | ID
;