grammar emfviews.dsl.Vpdl with org.eclipse.xtext.common.Terminals
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
generate sqlview "http://www.dsl.emfviews/Sqlview"

//Grammar to create model views

Model:
  'create' 'view' viewName=ID 'on'  metamodel+=Metamodel 
  ("," metamodel+=Metamodel)* expression+=Expression;
Metamodel: metamodelURL+=EString 'as' metamodelName+=MetamodelName;
Expression:
  'select' select+=Select
  'from' from+=From
  'where' (condition+=Condition)+;
Select: select+='*' | selectAttribute+=SelectAttribute 
  ("," selectAttribute+=SelectAttribute)*;
SelectAttribute:metamodel+=[MetamodelName] '.' class+=Class '.'
   attribute+=Attribute;
From: join+=Join (',' join+=Join)* ;
Join:  joinLeft+=JoinLeft "join" joinRight+=JoinRight
    'as' relation+=Relation;
JoinLeft:metamodelLeft+=[MetamodelName] '.' classLeft+=Class;
JoinRight:metamodelRight+=[MetamodelName] '.' classRight+=Class;
Attribute: name=ID;
Class: name=ID;
MetamodelName:name=ID;
Relation:name=ID;
Condition:(value+=Comparison | value+=EclExpression) (('and' | 'or') 
  (value+=Comparison | value+=EclExpression))*;
EclExpression: value=EString;
Comparison:
  left+=Left ('=' | '<=' | '>=' | '<' | '>' | '<>') right+=Right;
Left: metamodel+=[MetamodelName] '.' class+=[Class] '.'
   attributeWhereLeft=Attribute;
Right: (metamodel+=[MetamodelName] '.'class+=[Class] '.'
  attributeWhereRight=Attribute | value=EString);
  
EString returns ecore::EString:
  STRING | ID
;
